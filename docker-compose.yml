# Docker Compose for News Aggregator (No version needed in new format)

services:
  # Database - PostgreSQL (Best for structured data with complex queries)
  postgres:
    image: postgres:15-alpine
    container_name: news_aggregator_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: news_aggregator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_ROOT_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - news_network

  # Redis - For caching and queue management
  redis:
    image: redis:7-alpine
    container_name: news_aggregator_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - news_network

  # Backend - Laravel API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: news_aggregator_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      - postgres
      - redis
    networks:
      - news_network

  # Frontend - React with TypeScript
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:8000/api
    container_name: news_aggregator_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - news_network

  # Nginx - Reverse proxy and load balancer
  nginx:
    image: nginx:alpine
    container_name: news_aggregator_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - news_network

  # Queue Worker - For background jobs
  queue-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: news_aggregator_queue_worker
    restart: unless-stopped
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    environment:
      APP_NAME: "News Aggregator Queue Worker"
      APP_ENV: local
      APP_KEY: base64:your-app-key-here
      APP_DEBUG: "true"

      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: news_aggregator
      DB_USERNAME: postgres
      DB_PASSWORD: password

      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379

      QUEUE_CONNECTION: redis
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - news_network

  # Scheduler - For automated data scraping
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: news_aggregator_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    environment:
      APP_NAME: "News Aggregator Scheduler"
      APP_ENV: local
      APP_KEY: base64:your-app-key-here
      APP_DEBUG: "true"

      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: news_aggregator
      DB_USERNAME: postgres
      DB_PASSWORD: password

      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - news_network

networks:
  news_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_storage:
    driver: local